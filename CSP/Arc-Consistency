from queue import Queue
constraints = [(2, 0), (2, 1), (3, 0), (3, 1)]
incompatibles = {(2, 0): [(2, 1), (2, 0), (0, 2)],
                 (2, 1): [(2, 1), (1, 0), (1, 1)],
                 (3, 0): [(2, 0), (2, 1), (1, 1)],
                 (3, 1): [(0, 1), (0, 0), (2, 0)]}
domain = 4
variables = [0, 1, 2, 3]
domains = {variable: list(range(domain)) for variable in variables}

def revise(i, j):
    revis = False
    for value in domains[i]:
        if all([(value, _) in incompatibles[(i, j)] for _ in domains[j]]):
            domains[i].remove(value)
            revis = True

    return revis

q = Queue()
for constraint in constraints:
    q.put(constraint)

while q.not_empty:
    (i, j) = q.get()
    if revise(i, j):
        for (a, b) in constraints:
            if a != j and b == i:
                q.put((a, b))


